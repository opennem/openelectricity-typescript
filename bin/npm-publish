#!/usr/bin/env bash

set -eux

# Function to bump version
bump_version() {
  current_version=$(node -p "require('./package.json').version")
  IFS='.' read -r major minor patch <<< "$current_version"
  new_version="$major.$minor.$((patch + 1))"

  # Update version in package.json
  tmp=$(mktemp)
  jq ".version = \"$new_version\"" package.json > "$tmp" && mv "$tmp" package.json

  echo "$new_version"
}

# Bump the version
NEW_VERSION=$(bump_version)

# Set npm auth token
yarn config set npmRegistryServer "https://registry.npmjs.org"
yarn config set npmAuthToken "$NPM_TOKEN"

# Build the project
yarn build

# Navigate to the dist directory
cd dist

# Extract the pre-release tag if it exists
if [[ "$NEW_VERSION" =~ -([a-zA-Z]+) ]]; then
  # Extract the part before any dot in the pre-release identifier
  TAG="${BASH_REMATCH[1]}"
else
  TAG="latest"
fi

# Publish with the appropriate tag
yarn publish --access public --tag "$TAG" --new-version "$NEW_VERSION"

# Go back to root and commit version bump
cd ..
git add package.json
git commit -m "chore: bump version to $NEW_VERSION"
git tag "v$NEW_VERSION"